.. _glosario:

========
Glosario
========

.. glossary::

    API
        `Application-Programming-Interface`__; conjunto de funciones y procedimientos (o
        métodos, si se refiere a programación orientada a objetos) que ofrece cierta
        biblioteca para ser utilizado por otro software como una capa de abstracción.

        __ http://es.wikipedia.org/wiki/Interfaz_de_programaci%C3%B3n_de_aplicaciones
    
    DOM
        `Document-Object-Model`__; interfaz de programación de aplicaciones que
        proporciona un conjunto estándar de objetos para representar documentos HTML y
        XML, un modelo estándar sobre cómo pueden combinarse dichos objetos, y una
        interfaz estándar para acceder a ellos y manipularlos.
    
        __ http://es.wikipedia.org/wiki/DOM

    JSON
        `JavaScript-Object-Notation`__; formato ligero para el intercambio de datos.

        __ http://es.wikipedia.org/wiki/JSON

    RPC
        `Remote-Procedure-Call`__; es un protocolo que permite a un programa de
        ordenador ejecutar código en otra máquina remota sin tener que preocuparse por
        las comunicaciones entre ambos.

        __ http://es.wikipedia.org/wiki/RPC

    field
        An attribute on a :term:`model`; a given field usually maps directly to
        a single database column.
        
        
    generic view
        A higher-order :term:`view` function that abstracts common idioms and patterns
        found in view development and abstracts them.
        
        
    model
        Models store your application's data.
        
        
    MTV
        hola

    MVC
        `Model-view-controller`__; a software pattern.

        __ http://en.wikipedia.org/wiki/Model-view-controller

    project
        A Python package -- i.e. a directory of code -- that contains all the
        settings for an instance of Django. This would include database
        configuration, Django-specific options and application-specific
        settings.

    property
        Also known as "managed attributes", and a feature of Python since
        version 2.2. From `the property documentation`__:
        
            Properties are a neat way to implement attributes whose usage
            resembles attribute access, but whose implementation uses method
            calls. [...] You
            could only do this by overriding ``__getattr__`` and
            ``__setattr__``; but overriding ``__setattr__`` slows down all
            attribute assignments considerably, and overriding ``__getattr__``
            is always a bit tricky to get right. Properties let you do this
            painlessly, without having to override ``__getattr__`` or
            ``__setattr__``.

        __ http://www.python.org/download/releases/2.2/descrintro/#property

    queryset
        An object representing some set of rows to be fetched from the database.
        
    slug
        A short label for something, containing only letters, numbers,
        underscores or hyphens. They're generally used in URLs. For
        example, in a typical blog entry URL:
        
        .. parsed-literal::
        
            http://www.djangoproject.com/weblog/2008/apr/12/**spring**/
            
        the last bit (``spring``) is the slug.

    template
        A chunk of text that separates the presentation of a document from its
        data.
        
    view
        A function responsible for rending a page.