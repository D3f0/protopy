

###########################
Aplicación de Demostración
###########################


Se diseñó una aplicación denominada ``salesman`` (agente de ventas viajante)
para ejemplificar el funcionamiento de Protopy y Doff. La aplicación modela
una empresa dedicada a la venta de productos electrónicos. Los productos son vendidos Online o a través de agentes viajantes que poseen una copia del catalogo y generan pedidos a partir de estos.
Los vendedores pueden realizar altas de clientes.


Organización del código fuente del proyecto
-------------------------------------------

El código fuente del proyecto se ubicó en la carpeta ``sources/sakesman``. 
La aplicación ``offline`` se encuentra en ``source/offline`` mencionada en los capítulos anteriores. De esta manera, para la instanalación, simplemente se agregó el directorio padre de ``salesman`` al PYTHONPATH.

.. code-block:: python

    # Se agrega el directorio padre como repositorio de paquetes Python
    sys.path.append('..')
    

El parámetro ``OFFLINE_BASE`` es la cadena ``"off"``. El sitio remoto que se creo para la demostración fue llamado ``ventas``. 

Desarrollo de la aplicación
---------------------------

El desarrollo de la aplicación comenzó por la definición del modelo. Este fue dividido en dos aplicaciones: ``core`` donde se situaron entidades comunes y ``ventas`` donde se crearon las propias del sistema de pedidos.

Las entidades definidas en la aplicación ``core`` fueron las siguientes:
    
    * Pais
    
    * Provincia
        
        Relacionado con Pais.
        
    * Ciudad
    
        Relacionado con Provincia
    
    * Vendedor
    
        Posee información personal y las ciudades asingadas.
    
    * Porveedor
        
        Relacionado con los productos que provee.
    
    * Categoria
        
        Identificación de tipos de productos. 
    
    * Producto
    
    
        
En la aplicación ``ventas`` cuenta con las entidades:

    * Pedidas
    
    * ItemPedido
    
 
.. figure:: ../_dot/django_models.png
    
    Diagrama de Base de Datos de Salesman (generado con ``graph_models``)

Vistas
------

La mayor parte de las vistas se implementaron mediante vistas genéricas 
(generic views) provistas por Django [DjangoDocsGenericViews09]_ (en el servidor) 
y Doff (en el cliente).
Django prvee varios tipos de vistas genéricas [*]_, de los cuales solo se utilizaron  
las relacionadas con CRUD. 

.. [*] CRUD, consultas, comentarios, redirección, etc.

.. [DjangoDocsGenericViews09] Vistas Genéricas,
    Documentación de Django,
    último acceso Noviembre de 2009,
    http://docs.djangoproject.com/en/dev/ref/generic-views/
 

Las vistas genéricas utilzadas fueron:

    * ``django.views.generic.simple.direct_to_template``
    
        Procesa un template como salida, recibe como arugmento el ``template_name``
        con el nombre del la plantilla.
        
    * ``django.views.generic.create_update.create_object``
        
        Crea una entidad en la base de datos. Recibe los argumentos:
            
            * ``form_class`` o ``model``: Un ``ModelForm`` o ``Model`` sobre el cual se realizará la creación.
        
            * ``post_save_redirect``: La URL a la cual el cliente es redirigod
              tras la creación existosa de la entidad, por defecto es  ``object.get_absolute_url()``.
      
            * ``template_name``: Nombre del template que se usará para generar la salida.
            
            * ``extra_context``: Elementos extra para generar el template.
    
        
    * ``django.views.generic.create_update.update_object``
        
        Los parámetros de esta vista son iguales a ``create_object`` agregando
        
        * ``object_id``: Identificador del objeto a editar.
        
    * ``django.views.generic.create_update.delete_object``
    
        * ``model``: Modelo al cual pertenece la instancia a ser eliminada.
        
        * ``post_delete_redirect``: URL a la cual se redirige luego de una eliminación exitosa.
        
        * ``object_id``: Identificador de la instancia a eliminar.
        
        
La portada de la aplicación en línea se diseño de la siguiente manera:

.. figure:: ../_static/sshot_inicio.png

.. raw:: latex

    \newpage


Se utilizó una plantilla *Underground Store* del sitio http://www.styleshout.com/ liberada sobre la licencia Creative Commons [CC2009]_.

.. [CC2009] *Licencia Creative Commons*,
    último acceso Noviembre de 2009,
    http://es.wikipedia.org/wiki/Creative_Commons


Como menú de la aplicación se dispuso de la siguiente manera:

.. figure:: ../_static/sshot_button.png
	
    Barra de botones de la aplicación

Los enlaces de la barra superior permiten acceder a diferentes secciones de la aplicación en línea:
  
  * Inicio

      Pagina de portada

  * Catálogo
  
      Catálogo de productos

  * Pedidos

	???

  * Administrar
   
      Permite realizar CRUD sobre Clientes, Ciudades, Productos y Categorías.

  * Desconectar

     Desconectar es un enlace hacia el sitio remoto.
