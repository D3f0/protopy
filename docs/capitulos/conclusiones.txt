

#############################
Conclusiones y Líneas Futuras
#############################

************
Conclusiones
************

Durante el desarrollo de la presente tesina se realizó un análisis sobre las
tecnologías disponibles para el desarrollo de aplicaciones web destacando
el aporte de los frameworks orientados a aplicaciones de contenidos, como Ruby On Rails o 
Django. Gracias a estar implementados en lenguajes de alto nivel y minimizando
la cantidad de capas, facilitan la tarea de extensión.

   

El trabajo fue realizado integramente con Software Libre y el producto
también consituye un framework bajo el mismo tipo de licencia.




La solución propuesta se basó integramente en Open Source. Se utilizaron los
siguientes productos:
    
    * Python
        
        Lenguaje de programación.
    
    * Django
        
        Framework de aplicaciones web escrito en Python.
        
    * Aspen
        
        Servidor Web basado en WSGI
    
    * Mozilla Firefox
    
        * Firebug
        
            Plugin de depuración.
        
    * Mercurial
        
        Sistema de control de versiones basado en Python.
    
    * Sphinx
    
        Sistema de generación de documentación basado en REST (REStrcutred Text).
        Sistema de documentación actual del lenguaje Python y varios proyectos
        importantes como Matplotlib.
        
        Se utilizó la salida a LaTeX y el comando ``pdflatex`` para generar la
        salida en PDF.
    
    * Eclipse 
    
        Entorno de desarrollo integrado escrito en Java/SWT multiplataforma.
        Posee complementos para varios lenguajes como Java, C/C++, PHP, Ruby, 
        etc. 
        
        * MercurialEclipse
            
            Plugin para control de versiones mediante Mercurial
        
        * Pydev
            
            Plugin para proyectos basados en Python, con resaltado de sintaxis,
            autocompleción, indicación de errores, etc.
    
    * Kate
        
        Editor de texto basado en el entorno KDE con resaltado de sintaxis.


Cosas que hacer notar:
    Que exista el yield y asignación de arreglos
    



**************
Lineas futuras
**************

Conversión de código Python en JavaScript
=========================================

Google publicó en Mayo de 2006 un proyecto llamado Google Web Toolkit (GWT) [*]_, que 
consiste en un compilador de Java en JavaScript, que permite al programador
relizar aplicaciones web totalmente en Java. James Tauber y Luke Casson Leighton
realizaron una implementación similar a GWT sobre Python, denominada PyJamas [*]_.
Es posible por lo tanto generar un compilador de código Python a JavaScript,
utilizando la API de Protopy y Doff, permitiendo que los programadores utilizen 
Python para la totalidad del desarrollo.


.. [*] http://code.google.com/intl/es-AR/webtoolkit/
.. [*] http://pyjs.org/features.html

Sitio de administración
=======================
Django se caracteriza por brindar una aplicación de admnistración (``django.contrib.admin``) 
que permite 
realizar CRUD (Create, Retrieve, Update, Delete) sobre los modelos de las 
aplicaciones de usuario, interactuando con la aplicación  de autorización y permisos
(``django.contrib.auth``).
En base a la implemetnación de Protopy y Doff sería posible implementar un 
sitio de administración similar.

 
Workers con soporte para Javascript 1.7
=======================================
Gears provee un mecanismo de ejecución de código en el cliente de manera
concurrente llamado Worker Pool que permite a tareas que demandan tiempo de
CPU considerables ser ejecutadas en segundo plano, evitando entorpecer el refresco 
de la interfase del navegador.
Una caractersística de los worker pools, es que se ejecutan en un ámbito de 
nombres diferente al del hilo principal y el único mecanismo de comunicación
con el hilo principal es un sistema de cola de mensajes.

Se podrían aislar partes del framework Doff para relizar tareas como el ciclo
del ``Request`` o las tareas de acceso a la base de datos en un Worker Pool.


Compatibilidad con ES5 y HTML 5
===============================
EcmaScrtip 5 o JavaScript 2.0 resulve varios aspetctos que fueron abordados
por Protopy/Doff, como un sistema de clases. Muchas optimizaciones realizadas
sobre Doff 


Optimizaciones en Base a Permanencia de Estado
==============================================

.. note:: completar!!! 

