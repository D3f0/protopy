.. _cliente:

#######################
Tecnologías del cliente
#######################

**************************
Estructura de un navegador
**************************

.. _navegador-web:
Navegador Web
=============
Un navegador web o *web browser*, es un software encargado de representar documentos de hípertexto.
El lenguaje en el cual se escriben estos documentos es HTML. 

.. _cliente-html:
HTML
====

.. _cliente-css:
CSS
===

.. _cliente-javascript:

JavaScript
==========
.. Explicar como meter codigo javascript en un doc da sustento a protopy

al archivo que contiene la funcionalidad. Mas tarde cuando el navegador descarga
el documento y comienza su lectura al encontrar esta etiqueta solicita
al servidor el archivo referenciado y lo interpreta, para continuar luego con la
lectura del resto de las etiquetas. 

..
    De Wikipedia, la enciclopedia libre

    Programación basada en prototipos

    Programación basada en prototipos es un estilo de programación orientada a
    objetos en el cual, las "clases" no están presentes, y la re-utilización de
    procesos (conocida como herencia en lenguajes basados en clases) se obtiene
    a través de la clonación de objetos ya existentes, que sirven de prototipos,
    extendiendo sus funcionalidades. Este modelo es conocido como orientado a
    prototipos, o programación basada en instancias.

    El original (y el más canónico) ejemplo de lenguaje prototipado es el
    lenguaje Self, desarrollado por David Ungar y Randall Smith. Sin embargo el 
    paradigma sin clases está comenzando a popularizarse y ya ha sido
    implementado en lenguajes de programación como JavaScript, Cecil,
    NewtonScript, Ío, MOO, REBOL y varios otros.

    En lenguajes basados en clases los objetos pueden ser de dos tipos generales,
    las clases y las instancias. Las clases definen la disposición y la
    funcionalidad básicas de los objetos, y las instancias son objetos "utilizables"
    basados en los patrones de una clase particular. En este modelo, las clases
    actúan como colecciones de comportamiento (métodos) y estructuras que son
    iguales para todas las instancias, mientras que las instancias llevan los datos
    de los objetos. La distinción del papel se basa así sobre todo en una distinción
    entre la estructura y el comportamiento en un lado, y el estado en el otro.

    Los entusiastas de la programación basada en prototipos a menudo argumentan que
    los lenguajes basados en clases animan un modelo del desarrollo que se centra
    primero en la taxonomía y las relaciones entre las clases. En cambio, la
    programación basada en prototipos intenta animar al programador que se centre en
    el comportamiento de un cierto sistema de ejemplos y después de clasificar estos
    objetos en objetos arquetipos que se utilizan más adelante en una manera similar
    a las clases. Como tal, muchos sistemas basados en prototipos animan la
    alteración de prototipos durante tiempo de ejecución, mientras que solamente muy
    pocos sistemas orientados a objeto, basados en clase (como el primer sistema
    orientados al objetos dinámicos, Smalltalk) permiten que las clases sean
    alteradas durante la ejecución de un programa.

    Mientras que basan la amplia mayoría de sistemas basados en prototipos se hacen
    con lenguajes de programación interpretados y de tipos de datos dinámicos, es
    importante precisar que los sistemas de tipos de datos estáticos son
    técnicamente factibles. El lenguaje de programación de Omega que es basado en
    prototipos es un ejemplo de tal sistema, aunque según el Web site de Omega,
    Omega no es exclusivamente de tipos de datos estáticos, pero su "compilador
    puede elegir utilizar el tipo de dato estático donde es posible esto y puede
    mejorar la eficacia del programa.”

.. 
    http://javis.wordpress.com/2006/10/23/javascript-orientado-a-objetos/
    Algo de introduccion a objetos en javascript. sustento de prtopy y el constructor de clases

************************
Evolución del JavaScript
************************


************
Google Gears
************

Introducción
============

Google Gears es un software de código abierto distribuido por Google que añade
una nueva capa de aplicación a los navegadores.

.. http://gears.google.com/ Sitio de google gears

Una vez instaldo como una extensión en el navegador, el producto agrega una API
que permite programar en JavaScript interacciones con los componentes que
contiene.

Los tres componentes principales que incorpora gears son:

    * Local Server
        Permite almacenar localmente datos correspondientes a las páginas webs.
        Tanto HTML, JavaScript e imágenes entre otros, pueden ser almacenados
        localmente por el cliente e interponerse entre el requerimiento del
        navegador al servidor en conslutas posteriores, evitando asi la
        solicitud HTTP y optimizando el tiempo de respuesta de la aplicacion.
        
        Pese a que su funcionamiento es muy similar al de la cache del navegador
        la diferencia fundamental esta en que la actualizacion de los recursos
        que almacena es mantenida y realizada por el desarrollador.
    
    * Database
        Permite almacenar localmente datos que no correspondan a una página web
        pero son parte de la logica de la aplicacion y requieren de un
        almacenamiento presistente.
        
        El motor de base de datos utilizado es SQLite con algunos agregados y
        restricciones para brindar seguridad y formas de busqueda.
 
        Luego de que el usuario de la aplicacion web otroge el permiso explicito
        de creacion de la base, el desarrollador, disponer de un almacenamiento
        del tipo relacional en la máquina huésped. 
    
    * Worker Pool
        De manera similar a los "hilos" del sistema operativo, el manejador de
        hilos permite ejecutar acciones en segundo plano sin bloquear la
        ejecución del hilo principal del navegador.

        Hay que destacar que el manejador no corre en forma paralela a la
        ejecución del navegador, sino que se ejecuta cuando la página web se
        mantiene activa, por lo cual el refresco de página o la salida de la
        misma provoca que este se detenga o no se ejecute directemente.

Basicamente Gears y sus principales componentes estan enfocados en permitir al
programador ejecutar sus aplicaciones cuando el navegador no está conectado
al servidor. El lider del grupo de desarrollo Bret Taylor dijo que buscaba ser
capaz de acceder al Google Reader mientras usaba la conexión de la compañía, la
cual frecuentemente tenia un acceso defectuoso a Internet.

.. http://bret.appspot.com/ Blog de Bret Taylor

Gears esta incluido en el nuevo navegador de Google (Google Chrome) y posee
extensiones para instalarse en Internet Explorer 6.0+, Mozilla Firefox, Safari y
Opera Mini, y funciona en los sistemas operativos Windows 2000, XP y Vista,
Windows Mobile 5 y 6, MacOS y Linux de 32 bits.

Con susecivos lanzamientos el producto sea visto mejorado y favorecido en varios
aspectos a partir de la versión 0.4 del Gears se puede hablar ya de:

    * API para GIS, que permite acceder a la posición geográfica del usuario.

    * El API Blob, que permite gestionar bloques de datos binarios.

    * Accede a archivos en el equipo cliente a través del API de Google Desktop.

    * Permite enviar y recibir Blobs con el API HttpRequest.
    
    * Localización de los cuadros de diálogo de Gears en varios idiomas.

    * API para canvas, que permite manipular imagenes desde JavaScript.

En todos los casos que se requiera tener instalada una aplicacion soportada por
Gears vale la pena aclarar que el cliente debe haber accedido al menos una vez
al servidor de la aplicacion web y otorgado los permisos de instalacion
correspondiente. 