.. _cliente:

#######################
Tecnologías del Cliente
#######################

*********************************************
Web Dinámica Desde la Perspectiva del Cliente
*********************************************

Desde la perspectiva del usuario, la Web consiste en una gran cantidad de
documentos interconectados a nivel mundial llamados *páginas web* a los cuales
se accede mediante un navegador.

Cada uno de estos documentos está escrito en un lenguaje de marcado (o etiquetas), típicamente
HTML, que utiliza a su vez dos lenguajes:

 * CSS [*]_ para definir el estilo de las páginas de manera consistente.
 * Javascript para definir la interacción en la página.

.. [*] Cascading Style Sheet

.. note:: Poner como llegamos a decir "dinámica" en el cliente, sino simplemente puede ser web desde la perspectiva del cliente el titulo. 

JavaScript [WikiJavascript09]_ ha tenido durante mucho tiempo la reputación de ser un lenguaje 
inadecuado para el desarrollo serio. Una de las razones fue que, a pesar 
de los estándares impuestos por la European Computer Manufacturers Association (ECMA) [*]_ [ECMAScript09]_,
los desarrolladores de navegadores realizaron sus propias variantes 
del lenguaje, como Microsoft en el implementación de JScript [MSFTJScript09]_ para su navegador
Internet Explorer (IE). Estos problemas relegaron a JavaScript a tareas prescindibles, como validación de formularios
en el cliente y efectos visuales simples.

Un problema similar ocurrió con Document Object Model (DOM), el mecanismo por el cual se interactúa con el
documento y el navegador, estandarizado por la World Wide Web Consortium (W3C) [*]_. Sus versiones fueron
nombradas como nivel DOM, existiendo nivel 0, 1, 2 y 3.
No todos los navegadores implementaron por completo los niveles, dando lugar a confusión e incompatibilidades.

.. [*]_ Organización fundada en 1961 para estandarizar los sistemas computarizados en Europa.

.. [*]_ Consorcio internacional que produce recomendaciones para la World Wide Web.

.. [MSFTJScript09] *JScript*, Microsoft Developer Network, último acceso Septiembre de 2009, http://msdn.microsoft.com/es-es/library/72bd815a%28VS.80%29.aspx

.. [ECMAScript09] *Especificación ECMA*, TC39 - ECMAScript (formerly TC39-TG1), último acceso de Agosto 09, http://www.ecma-international.org/memento/TC39.htm

.. [WikiJavascript09] *Javascript* http://es.wikipedia.org/wiki/JavaScript

A partir de la aparición de AJAX [*]_, una técnica de desarrollo web para crear
aplicaciones interactivas, los desarrolladores diseñaron librerías de JavaScript
que presentaron una API uniforme que salvaba las incompatibilidades existentes.

.. [*]_ *Asynchronous JavaScript And XML*, una técnica de desarrollo web para crear aplicaciones interactivas.

Con la popularización de estas librerías, también lo hicieron las herramientas de
depuración sofisticadas como Firebug [Firebug09]_, lo que permitió realizar aplicaciones
más complejas y compatibles con la gran mayoría de los navegadores del mercado.

.. [Firebug09] *Firebug*, Plugin de depuración integral, último acceso Septiembre 2009, http://getfirebug.com/

Google lanzó, en 2007, un plugin para los navegadores populares
llamado Google Gears que agrega tres componentes:

    * Web Server

        Un servidor de archivos que se ejecuta en el cliente.

    * DataBase

        Una base de datos transaccional.

    * Worker Pool

        Un mecanismo para la ejecución de JavaScript como procesos.

**************************
Estructura de un Navegador
**************************

.. _navegador-web:

Navegador Web
=============

Es un software que presenta documentos de hipertexto al usuario.
Los lenguajes de codificación de hipertexto más populares son HTML y XHTML.

Un navegador no sólo interpreta los documentos de hipertexto, sino
que también puede mostrar otros tipos de contenidos, como imágenes
(JPEG, GIF, PNG, etc.), sonido (WAV, MP3, OGG), vídeo (MPEG, H264, RM, MOV), 
así como elementos interactivos (como el caso de Macromedia Flash, 
applets Java o controles ActiveX en la plataforma Windows).
Debido a la cantidad de recursos que debe manejar un navegador, 
el servidor web agrega a cada respuesta al cliente una cabecera donde le indica 
el tipo de recurso que está entregando. Esta especificación se realiza con el 
estándar MIME.

Un navegador web acepta como entrada del usuario una URL.
Una vez validada, éste descarga el recurso apuntado mediante el protocolo HTTP.

Una URL tiene el siguiente esquema, donde se pueden diferenciar varios componentes:

.. figure:: ../_svg/esquema_urls.png
    
    Formato de una URL.

Los componentes de una URL son:

    * Esquema

        Especifica el mecanismo de comunicación. Generalmente HTTP y HTTPS [*]_.
        
    * Anfitrión

        Especifica el nombre de dominio del servidor en Internet, por ejemplo:
        *google.com*, *nasa.gov*, *wikipedia.com*, etc.
        Se popularizó la utilización del subdominio "www" para identificar al
        anfitrión que ejecuta el servidor web, dando lugar a direcciones del tipo
        *www.google.com*, *www.nasa.gov*, etc.
        
        El *puerto* es un parámetro de conexión TCP, y suele ser omitido debido
        a que el esquema suele determinarlo, siendo 80 para HTTP y 443 para HTTPS. 
            
    * Recurso

        Especifica dentro del servidor, la ruta para acceder al recurso.
        
    * Query

        El parámetro query tiene sentido cuando el recurso apuntado por la ruta
        no se trata de una página estática y sirve para el pasaje de parámetros.
        El programa que genera el recurso puede recibir como argumentos estos
        parámetros, por ejemplo, cuando se ingresa la palabra *foo* en el buscador 
        Google, la URL que provee el resultado de la búsqueda es:
            
            http://www.google.com/search?**q=foo**

    * Enlace

        Dentro de un documento de hipertexto pueden existir enlaces internos.
        Gracias a este parámetro se puede enlazar a una sección específica de un documento,
        permitiendo al navegador ubicarse visualmente.

.. [*] *Hypertext Transfer Protocol Secure* es la versión segura de HTTP.

Un navegador generalmente accede a documentos ubicados en la web mediante el
protocolo HTTP. Sin embargo, es posible acceder a documentos locales, donde el
esquema suele ser ``file`` y el anfitrión se encuentra ausente, por ejemplo:
    
    file:///home/nacho/paginas/pepe.html

HTTP
====

HTTP es el protocolo de transferencia de hipertexto.

Para acceder al recurso *archivos/curso_javascript.html* en el servidor
*students.unp.edu.ar*, de la url http://students.unp.edu.ar/archivos/curso_javascript.html,
el navegador conforma la siguiente consulta::

    GET /archivos/curso_javascript.html HTTP/1.1
    Host: students.unp.edu.ar
    User-Agent: Mozilla/5.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    Accept-Language: es-ar,en-us;q=0.7,en;q=0.3
    Accept-Encoding: gzip,deflate
    Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
    Cookie: user_id=G7NVG5YY51I9DZAIJDEDQIXYQSRF0CTL

.. _http_request:

Esto se conoce como una consulta HTTP o **HTTP Request**.

En la primer línea se especifica el método HTTP y el nombre del recurso, junto con la
versión del protocolo que soporta el navegador (o cliente)::

    GET /archivos/curso_javascript.html HTTP/1.1

La segunda línea especifica el host al cual se accede. Un mismo servidor web puede estar
publicado en varios dominios, mediante esta línea se puede discriminar a cuál se
intenta acceder al recurso::

    Host: students.unp.edu.ar
    
El siguiente componente del **request** es la línea que identifica al cliente, en
este caso el navegador informa que se trata de Mozilla versión 5::

    User-Agent: Mozilla/5.0

Una vez que el servidor web ha localizado y accedido al recurso, procede a enviar
la respuesta, que generalmente es una página codificada en HTML.

.. _cliente-html:

HTML
====

HTML es un lenguaje de marcado que tiene como objetivo describir un documento
de hipertexto.
Un documento HTML se conforma por una serie de **tags** o etiquetas, las que tienen el siguiente formato.

.. figure:: ../_svg/etiqueta_html.png
    
    Formato de una etiqueta HTML.
 
Un documento HTML está delimitado por las etiqueteas ``html`` y contiene una
cabecera delimitada por ``head`` y un cuerpo, delimitado por ``body``. Por ejemplo:

.. code-block:: html

    <html>
        <head>
            <title>Mi pagina</title>
        </head>
        <body>
            <h1>Título principal</h1> <!-- comentario -->
            <p>Párrafo</p>
        </body>
    </html>

Tambien suele contener enlaces a recursos entendibles para el navegador,
como a las hojas de estilos o código JavaScript.

La inclusión de una hoja de estilo se realiza mediante la etiqueta ``link``, de la
siguiente manera:

.. code-block:: html

    <link type="text/css" rel="stylesheet" href="hoja_de_estilos.css">

Se puede, además, embeber en la página el estilo CSS, como en:

.. code-block:: html

    <style type="text/css">

        BODY {
            font-family: "Verdana";
            font-size: 12pt;
            padding: 2px 2px 3px 2px;
        }
    </style>

Al incrustarse el estilo en una página en particular, éste sólo tiene
validez para ese recurso.

Mediante la etiqueta ``script`` se incluye código JavaScript, aunque es
posible utilizar otros lenguajes, como VBScript en IE. Por ejemplo:

.. code-block:: html

    <script type="text/javscript" src="/medios/js/mi_codigo.js"></script>

De manera similar a lo que ocurre con el estilo, el código JavaScript se
puede embeber en el código HTML de varias formas [StephenChapmanJS2009]_, entre
ellas:

.. code-block:: html

    <script type="text/javascript">
        var x = 2;
        var y = 4;
    </script> 

.. [StephenChapmanJS2009] *Javascript and XML*, Stephen Chapman, About.com,
                          último acceso Agosto 2009, http://javascript.about.com/library/blxhtml.htm

.. _cliente-css:

CSS
===

CSS es un lenguaje utilizado para definir el estilo de las páginas.
Una hoja de estilo en cascada o **StyleSheet** determina cómo se va a mostrar un documento 
en pantalla, cómo se va a imprimir o, inclusive, cómo se realiza la pronunciación a través de un
dispositivo de lectura [W3cCSS2009]_.

El objetivo de CSS es separar el contenido de la presentación de un documento
HTML o XML. Una hoja de estilos puede ser enlazada desde varias páginas, permitiendo 
mantener coherencia y consistencia en todo el sitio. 

.. [W3cCSS2009] *Guia breve de CSS*, W3C, español, último acceso Agosto 2009,
    http://www.w3c.es/divulgacion/guiasbreves/HojasEstilo

.. _cliente-javascript:

JavaScript
==========

JavaScript es un lenguaje de programación interpretado creado originalmente por
Brendan Eich, para la empresa Netscape, con el nombre de Mocha. Surgió
a principios de 1996, como un lenguaje de scripting para la web y enfocado en la
interacción directa con el usuario.

Tiene una sintaxis semejante a la de Java y C, pero JavaScript dista mucho de
ser Java y debe su nombre más a cuestiones de marketing que a principios de diseño. 
De hecho, fue influenciado por lenguajes como Self, Scheme, Perl, e incluso en
versiones modernas, por Python.

.. note:: 13/10/2009 Marta's corrections.

Orientación a Objetos
---------------------

JavaScript es un lenguaje orientado a objetos. Sin emabargo carece de clases
y ocultamiento de información. Existen varias técnicas para lograr encapsulamiento,
abastracción, herencia y polimorfismo. 

Generalmente se obtienen mediante dos técnicas:

    * Arreglo Asociativo (``Object``)
        
        Este tipo de dato, que representa una lista de asociaciones clave-valor, 
        presenta una particularidad en JavaScript. Las funciones miembro resuelven
        la palabra resevada ``this`` en el ámbito de la colección. Por lo tanto
        permite generar un "objeto" de una única instancia. En este tipo de datos,
        el operador ``.`` responde de la misma manera que el operador de indexación
        ``[]``.
        
        
        Por ejemplo:
también conocido como arreglo asociativo.
Los arreglos asociativos consisten en asocaciones clave-valor y están presentes en varios lenguajes [*]_.

.. En JavaScript, este tipo de dato responde al operador punto ``.`` de la misma manera que al operador de indexación ``[]``
		
		.. code-block:: javascript
			
			>>> var X = {
				metodo: function ()	{
					console.log( this.valor );
				},
				valor: 3
			   }

	mi_instancia.mi_metodo();
	
	
			   
			>>> X['metodo']();
			-> 3
			
			>>> X.metodo();
			-> 3

		
		Esta técnica se utilza en combinación con las clausuras en las librerías
		de JavaScript como Prototype [ProtypeOrgSrc09]_.
		
	* Prototipos
		
		Un prototipo es el equivalente a una clase en los lenguajes como Java o C++.
		Consiste en la definición de la una función que es llamada anteponiendo la
		palabra reservada ``new``. Durante la llamada, ``this`` se resuelve en
		el ámbito de la instancia y esta es devuelta.
		
		.. code-block:: javascript
			
			>>> var Clase = function () {
					this.metodo = function () {
						console.log( this.valor );
					}
					this.valor = 3;
				}
			>>> var instancia = new Clase();
			>>> instancia.metodo();
			-> 3
		
		Para acceder a la estructura de la clase, se utiliza el atributo 
		``prototype``.
		
		.. code-block:: javascript
		
			>>> var Clase = function () {}
			>>> Clase.prototype.metodo = function () {
					console.log( this.valor );
				}

			>>> Clase.prototype.valor = 3;
			>>> var instancia = new Clase();
			>>> instancia.metodo();
			-> 3
		
		Esta técnica permite implementar herencia.
	
	
	* Clausuras
		
		Una clausura es la utilización de funciones internas y referencias para
		lograr encapsulamiento y ocultamiento de información. 
		

.. [ProtypeOrgSrc09] *Código Fuente de Prototype, versión 1.6.3*, Prototype.org, 
					  http://www.prototypejs.org/assets/2008/9/29/prototype-1.6.0.3.js


DOM
===

DOM o Document Objetct Model es una especificación.


AJAX
====

AJAX es una tecnología que surge tras la necesidad de agilizar las interfases
de usuario basadas en la web. Es utilizada para lograr RIAs basadas en 
en las capacidades nativas del navegador (sin plugins de terceras partes).

AJAX debe su nombre a Asynchronous JavaScript And Xml. Consiste en 
la capacidad de que una página pueda originar peticiones HTTP que no



Estas peticiones se programan en JavaScript y si bien
originalmente se pensó en XML como lenguaje de intercambio de datos, es posible
transferir cualquier tipo de archivo como código HTML, código JavaScript, 
imágenes, hojas de estilos, JSON, etc.

Esta tecnología permite realizar interfases web más interactivas, debido a que las
transferencias asincrónicas solo recuperan del servidor los elementos que requieran
ser actualizados. 

La tecnología utiliza 4 elementos [WIKIAJAX09]_:

    * XHTML (o HTML) y hojas de estilos en cascada (CSS) para el diseño que
      acompaña a la información.
      
    * DOM como método de control de la representación y el navegador por 
      parte de JavaScript.
      
    * El objeto XMLHttpRequest para intercambiar datos de forma asíncrona con el
      servidor web. En algunos frameworks y en algunas situaciones concretas, se usa
      un objeto iframe en lugar del XMLHttpRequest para realizar dichos intercambios.
      
    * XML es el formato usado generalmente para la transferencia de datos
      solicitados al servidor, aunque cualquier formato puede funcionar, incluyendo
      HTML preformateado, texto plano, JSON y hasta EBML.

.. [WIKIAJAX09] *AJAX*, Wikipedia, último acceso Octubre de 2009, http://es.wikipedia.org/wiki/AJAX

Para poder utilizar esta tecnología, el navegador porvee un tipo de dato
llamado ``XMLHTTPRequest``. 




La expansión y masificación de la Web, llevó a que el ciclo de petición
respuesta en el navegador resultara insuficiente para proveer al usuario de
aplicaciones interactivas o :term:´RIA´, por este motivo se comenzo a trabajar
sobre nuevas técnica de desarrollo que culminaron el en nacimiento de AJAX,
acrónimo de Asynchronous JavaScript And XML (JavaScript asíncrono y XML).

Una aplicacion Web que trabaje con AJAX se ejecutan en el cliente o navegador y
mantiene una comunicación asíncrona con el servidor en segundo plano. De esta
forma le es posible realizar cambios sobre las páginas sin necesidad de
recargarla, lo que significa un aumento de la interactividad, velocidad y
usabilidad en las aplicaciones.

AJAX es una tecnología asíncrona, en el sentido de que los datos adicionales se
requieren al servidor y se cargan en segundo plano sin interferir con la
visualización ni el comportamiento de la página. JavaScript es el lenguaje en el
que normalmente se efectúan las funciones de llamada de AJAX mientras que el
acceso a los datos se realiza mediante XMLHttpRequest. En cualquier caso, no es
necesario que el contenido asíncrono esté formateado en XML.

En la practica AJAX no constituye una tecnología en sí, sino que es
un término que engloba a éstas cuatro tecnologías:



Funcionamiento de AJAX
----------------------

	# Se crea y configura un objeto XMLHttpRequest.
	# El objeto XMLHttpRequest realiza una llamada al servidor.
	# La petición se procesa en el servidor.
	# El servidor retorna un documento XML que contienen el resultado.
	# El objeto XMLHttpRequest llama a la función callback() y procesa el resultado.
	# Se actualiza el DOM (Document Object Model)de la página asociado con la
	petición con el resultado devuelto

Las ventajas de AJAX
--------------------

	* Mayor interactividad
	* Recuperación asíncrona de datos, reduciendo el tiempo de espera del usuario
	* Facilidad de manejo del usuario
	* El usuario tiene un mayor conocimiento de las aplicaciones de escritorio
	* Se reduce el tamaño de la información intercambiada
	* Portabilidad entre plataformas
	* No requieren instalación de complementos, applets de Java, ni ningún otro
	elemento
	* Código público

Las desventajas de AJAX
-----------------------

	* Usabilidad: Comportamiento del usuario ante la navegación
	* Botón de volver atrás del navegador
	* Empleo de iframes ocultos para almacenar el historial
	* Empleo de fragmento identificador del URL (‘#’) y recuperación mediante
	JavaScript
	* Problema al agregar marcadores/favoritos en un momento determinado de la
	aplicación
	* Problemas al imprimir páginas renderizadas dinámicamente
	* Tiempos de respuesta entre la petición del usuario y la respuesta del
	servidor
	* Empleo de feedback visual para indicar el estado de la petición al usuario
	* Requiere que los usuarios tengan el JavaScript activado en el navegador
	* En el caso de Internet Explorer 6 y anteriores, que necesita tener
	activado el ActiveX

.. note:: 

    terminar este tema

    A pesar de que el término «AJAX» fuese creado en 2005, la historia de las
    tecnologías que permiten AJAX se remonta a una década antes con la iniciativa de
    Microsoft en el desarrollo de Scripting Remoto. Sin embargo, las técnicas para
    la carga asíncrona de contenidos en una página existente sin requerir recarga
    completa remontan al tiempo del elemento iframe (introducido en Internet
    Explorer 3 en 1996) y el tipo de elemento layer (introducido en Netscape 4 en
    1997, abandonado durante las primeras etapas de desarrollo de Mozilla). Ambos
    tipos de elemento tenían el atributo src que podía tomar cualquier dirección URL
    externa, y cargando una página que contenga javascript que manipule la página
    paterna, pueden lograrse efectos parecidos al AJAX.
    
    El Microsoft's Remote Scripting (o MSRS, introducido en 1998) resultó un
    sustituto más elegante para estas técnicas, con envío de datos a través de un
    applet Java el cual se puede comunicar con el cliente usando JavaScript. Esta
    técnica funcionó en ambos navegadores, Internet Explorer versión 4 y Netscape
    Navigator versión 4. Microsoft la utilizó en el Outlook Web Access provisto con
    la versión 2000 de Microsoft Exchange Server.
    
    La comunidad de desarrolladores web, primero colaborando por medio del grupo de
    noticias microsoft.public.scripting.remote y después usando blogs, desarrollaron
    una gama de técnicas de scripting remoto para conseguir los mismos resultados en
    diferentes navegadores. Los primeros ejemplos incluyen la librería JSRS en el
    año 2000, la introducción a la técnica imagen/cookie[1] en el mismo año y la
    técnica JavaScript bajo demanda (JavaScript on Demand)[2] en 2002. En ese año,
    se realizó una modificación por parte de la comunidad de usuarios[3] al
    Microsoft's Remote Scripting para reemplazar el applet Java por XMLHttpRequest.
    
    Frameworks de Scripting Remoto como el ARSCIF[4] aparecieron en 2003 poco antes
    de que Microsoft introdujera Callbacks en ASP. NET.[5]
    
    Desde que XMLHttpRequest está implementado en la mayoría de los navegadores,
    raramente se usan técnicas alternativas. Sin embargo, todavía se utilizan donde
    se requiere una mayor compatibilidad, una reducida implementación, o acceso
    cruzado entre sitios web. Una alternativa, el Terminal SVG[6] (basado en SVG),
    emplea una conexión persistente para el intercambio continuo entre el navegador
    y el servidor.

JavaScript 1.7
==============

JavaScript en su versión 1.7, al contrario que su predecesores incorpra una serie de mejoras al
lenguaje como los generadores, los iteradores [MDCNew17JS09]_. 

.. [MDCNew17JS09] *New in JavaScript 1.7*, características nuevas de JavaScript 1.7, https://developer.mozilla.org/En/New_in_JavaScript_1.7


Iteradores
----------

Un generador es una

Generadores
-----------

Un generador es una función 




JSON
====

JSON [JSONOrg2009]_ (JavaScript Object Notation) es un estándard de codificación de datos, 
inspirado en la sintaxis de objetos de JavaScript.
Sus objetivos son: 

	* Ser legible para los programadores.
	
	* Fácil de interpretar para las computadoras (en principio debido a la cercanía con JavaScript).

Surge como alternativa a XML para el intercambio de datos en aplicaciones
web. 

.. [JSONOrg2009] *JSON*, Sitio Oficial del Estándard, último acceso Octubre de 2009, http://json.org/

.. Debido a que los navegadores carecen de la capacidad de ejecución de 
	códiog JavaScript en forma concurrente, el bucle de despacho de eventos
	debe competir con el resto de las tareas de la página. En una aplicación
	interaciva que utiliza AJAX, una tarea común es el "parsing" de XML (de las
	respuestas del servidor), 
	que demanda un esfuerzo computacional que debe ser tenido en cuenta si se
	debe realizar frecuentemente.

Los desarrolladores encontraron que formateando los datos como una cadena
literal para ser luego interpretada por la sentencia ``eval()`` [JSONOrgJS09]_ 
les permitía visualizar los datos que eran enviados al cliente ,  con un formato de datos legibles de suma ayuda
a la hora de realizar depuración.

.. [JSONOrgJS09] *Utilización de JSON en Javascript*, Json.org, ultimo acceso Agosto de 2009, http://json.org/js.html

La sentecia ``eval()`` es considerada peligrosa 
[SimonWillson24Ways09]_, 
debido a que abre la posiblidad de 
inyección de código directa sobre el navegador, razón por la cual las librerías
de JavaScript comenzaron a brindar parsers serugros para JSON.

.. [SimonWillson24Ways09] http://24ways.org/2005/dont-be-eval

Actualmente algunos navegadores incorporan un parser nativo de JSON
[MozillaMDCJSONNativo09]_ [IEBlogNativeJSON09]_
, que 
incorpora checkeos de seguridad y un tiempo de respuesta corto. Algunas librerías
de JavaScript sacan provecho de este intérprete nativo [DaveWardEncosia2009]_.

.. [MozillaMDCNativeJSON09] https://developer.mozilla.org/en/Using_JSON_in_Firefox
.. [IEBlogNativeJSON09] http://blogs.msdn.com/ie/archive/2008/09/10/native-json-in-ie8.aspx


.. [DaveWardEncosia2009] Dave Ward, Improving jQuery’s JSON performance and security, Julio de 2009, http://encosia.com/2009/07/07/improving-jquery-json-performance-and-security/



.. Note:: 

    Iteradores

************
Google Gears
************

Introducción
============

Google Gears es un software de código abierto distribuido por Google que añade
una nueva capa de aplicación a los navegadores.

.. http://gears.google.com/ Sitio de google gears

Una vez instaldo como una extensión en el navegador, el producto agrega una API
que permite programar en JavaScript interacciones con los componentes que
contiene.

Los tres componentes principales que incorpora gears son:

    * Local Server

        Permite almacenar localmente datos correspondientes a las páginas webs.
        Tanto HTML, JavaScript e imágenes entre otros, pueden ser almacenados
        localmente por el cliente e interponerse entre el requerimiento del
        navegador al servidor en conslutas posteriores, evitando asi la
        solicitud HTTP y optimizando el tiempo de respuesta de la aplicacion.
        
        Pese a que su funcionamiento es muy similar al de la cache del navegador
        la diferencia fundamental esta en que la actualizacion de los recursos
        que almacena es mantenida y realizada por el desarrollador.
    
    * Database

        Permite almacenar localmente datos que no correspondan a una página web
        pero son parte de la logica de la aplicacion y requieren de un
        almacenamiento presistente.
        
        El motor de base de datos utilizado es SQLite con algunos agregados y
        restricciones para brindar seguridad y formas de busqueda.
 
        Luego de que el usuario de la aplicacion web otroge el permiso explicito
        de creacion de la base, el desarrollador, disponer de un almacenamiento
        del tipo relacional en la máquina huésped. 
    
    * Worker Pool

        De manera similar a los "hilos" del sistema operativo, el manejador de
        hilos permite ejecutar acciones en segundo plano sin bloquear la
        ejecución del hilo principal del navegador.

        Hay que destacar que el manejador no corre en forma paralela a la
        ejecución del navegador, sino que se ejecuta cuando la página web se
        mantiene activa, por lo cual el refresco de página o la salida de la
        misma provoca que este se detenga o no se ejecute directemente.

Basicamente Gears y sus principales componentes estan enfocados en permitir al
programador ejecutar sus aplicaciones cuando el navegador no está conectado
al servidor. El lider del grupo de desarrollo Bret Taylor dijo que buscaba ser
capaz de acceder al Google Reader mientras usaba la conexión de la compañía, la
cual frecuentemente tenia un acceso defectuoso a Internet.

.. http://bret.appspot.com/ Blog de Bret Taylor

Gears esta incluido en el nuevo navegador de Google (Google Chrome) y posee
extensiones para instalarse en Internet Explorer 6.0+, Mozilla Firefox, Safari y
Opera Mini, y funciona en los sistemas operativos Windows 2000, XP y Vista,
Windows Mobile 5 y 6, MacOS y Linux de 32 bits.

Con susecivos lanzamientos el producto sea visto mejorado y favorecido en varios
aspectos a partir de la versión 0.4 del Gears se puede hablar ya de:

    * API para GIS, que permite acceder a la posición geográfica del usuario.

    * El API Blob, que permite gestionar bloques de datos binarios.

    * Accede a archivos en el equipo cliente a través del API de Google Desktop.

    * Permite enviar y recibir Blobs con el API HttpRequest.

    * Localización de los cuadros de diálogo de Gears en varios idiomas.

    * API para canvas, que permite manipular imagenes desde JavaScript.

En todos los casos que se requiera tener instalada una aplicacion soportada por
Gears vale la pena aclarar que el cliente debe haber accedido al menos una vez
al servidor de la aplicacion web y otorgado los permisos de instalacion
correspondiente. 