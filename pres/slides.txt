Presentación
------------

    :Título: **Aplicaciones Web Desconetadas**
    
    :Autores: Defossé Nahuel, van Haaster Diego Marcos
              
    :Tutor:  Saenz Lopez Marta
    
    :Fecha: 15 de Diciembre 2009
    
    :URL: https://code.google.com/p/protopy

Objetivos Principal
-------------------
"Extender un framework de aplicaciones web existente, OpenSource,
de manera que una aplicación realizada sobre éste pueda ser ejecutada
en el cliente de manera desconectada con un mínimo de modificaciones.
Para permitir que la aplicación pueda ejecutarse en el cliente, se
implementará":
    
    * Persistencia del modelo de datos en el cliente.
    * Subconjunto de acciones disponibles en modo desconectado.
    * Primitivas de sincronización entre la aplicación del cliente y la aplicación web que le dio origen".
    
    

Objetivos Secundarios
---------------------

* Open Source
    Coste de licenciemiento nulo y aseguramiento de la continuidad

* Multiplataforma
        Windows, Linux, Mac y móviles (dode exista un browser)

* Adaptación mínima de aplicaciones existentes
        Integración con un Frameworks Web

* Facilidad de utilización
    Reutilizar los conceptos/patrones del framework para una rápida asimilación de los desarrolladores.


Carencias del Browser
---------------------

 * Base de datos

 * Servidor web

 * Lenguaje de programación (consistente)

 * Concurrencia

 * Conectividad con el entorno del cliente


.. JavaScript nació como un juguete de Netscape, despues lo agarró ECMA y hoy es
.. un estandard. Cada venededor lo implementó como mejor le convenía, captura de mercad
.. FUD. DOM.

Tecnologías Existentes (1)
---------------------------


* **Silverlight** (.NET Framework, Microsoft)
        Solución muy interesante, pero **cerrada**.
        *Promesa* de no cautividad.

* Otras alternativas

    AIR, JavaFX, XUL, etc.

.. Explicación:
.. Silverlight -> * lenguaja a CLI (.NET), Silverlight CLI -> "Applet"
.. Silverlight -> DB en el Browser e integración con Winblows
.. Silverlight -> Animaciones y definicion de GUI en XML, IDE muy rica

.. AIR -> ActionScript (casi JS2), Animación, DB en el Cliente y Desktop
.. JavaFX -> Applet++, Nuevo Lenguaje mix de JS y Java (JS con tipado estático)
.. XUL -> Mozilla para aplicaciones

.. Todos se van por la tangente, no atacan el problema por
.. mercado cautivo, si alguien se le ocurre otra, levante la mano.

.. JavaScript recibió una mala reputación por sus implementaciones, pero
.. hoy en día es el soporte de lo "2.0". Los profesionales


Tecnologías Existentes
-----------------------

**JavaScript**!

    - Objetos
    - Expresiones Regulares
    - Patrones propios (Module, Closures)

**Librerías:**

    - Prototype
    - Dojo
    - Peppy

.. No reivnetar nada, Google apostó por JavaScript en la implementación de
.. Gears.

.. Bibliotecas de JavaScrit, hablar

.. Google implementó...

Tecnologías Existentes (2)
--------------------------

**Google Gears**

    Añade al navegador 3 componentes
    
                * Local Server
                        Un servidor de archivos locales
                * DataBase
                        Una base de datos transaccional
                * Worker Pool
                        Sistema de Hilos con pasaje de mensajes

.. Si bien estamos en una era "2.0", las implementaciones de JS de
.. los browsers se quedaron en el tiempo. La fundación Mozilla
.. que tiene como lenguaje plataforma JS implementó métodos no estandard
.. como palaeativo a la ausencia de ES5.


.. Google creó su compilador de JS para implementar sus aplicaciones web.
.. Cuando implementaban Wave para IE, se dieron cuenta que por más esfuerzos
.. que haga redmond, nunca va a ser un navegador para "aplicaciones" web.
.. Crearon un frame para IE.

.. El problema de los estándares no se resume a JavaScript, sino también a
.. DOM y HTML5, SVG, etc. Lo que se suele hacer es usar librerías que enmascaran
.. la implementaciones defectuosas en una sintaxis más bonita. jQurty, Protype,
.. Dojo, Mochikit.



.. Hablar de Jhon Reisg, Douglas Crockford, patrones de JavaScript.

.. Entonces nos quedamos con SpiderMonkey.

JavaScritp 1.7
--------------

* Generador:
    
    Ej: Recuperación perezosa de datos.

* Orientación a objetos:
    
    Métodos útiles como ``__noSuchMethod__``, ``__defineGetter__``
    y ``__defineSetter__``.

* Azucar sintáctico:
    
    Asignación múltiple


.. Nos vamos al servidor, nuestro objetivo es "desconctar"

.. CGI, lean WSGI del doc para ver que es simple ;)

Framework
---------

* Inversión de Control

* Comportamiento por defecto definido

* Extensibilidad

* No modificabilidad del código del framework

    Todo se extiende, nada se edita


Arquitectura
------------

Acá va el gráfico

.. 
    Gráfico completo

        - Aplicación en linea (Django)
           |
           | Offline
           |
           v
        - Aplicacion
        - Protopy
        - Doff
        - Firefox - Gears


Protopy
-------

Soporte para implementación de Django sobre el navegador.

    * Aprovechamiento de JavaScript 1.7

    * Módulos

    * OO Pythonica, ``type``

    * Integración de librerías:

        - API de DOM de Prototype
        - Eventos (Dojo)
        - CSS Selector (Peppy)

    * Gears
        Enmascaramiento en el módulo ``sys``, extensión de DB,
        Desktop.

.. Hacer un comentario sobre el ciclo de trabajo normal con javascript y
.. html, y como los módulos y la función require camba este enfoque.
.. Cada módulo define su propio espacio de nombres.
.. Cada módulo publica una interfaz.

Arquitectura (Doff)
-------------------

    Ahora mostramos Doff

Doff
----

Django on Protopy -> **Django Offline** :)

    - API de Modelos

    - Templates

    - Proyecto desconectado

    - Aplicaciones adicionales
        Sincronización
        Autenticación
        "Sesión"

Arquitectura (Offline)
-----------------------

Ahora mostramos Offline

..
    .. figure:: vistaso.png




Offline
-------

Soporte en el servidor para proyecto desconectado

    - Comandos de administración

    - Instalación

    - Seguridad

    - Sincronización

Demo
----

La aplicación de demostración es un agente de ventas.

Conclusiones
------------

Se lograron cumplir todos los objetivos.

Lineas Futuras
--------------

Tomar títulos


Miscelanea
----------

Todo el proyecto fue realizado con software **Open Source**:
    
    * **Firefox** (Plataforma)
    * **Firebug** (Depuración, esta tesina no podría haber existido sin Firebug)
    * **Django** (Framework Web)
    * **Python** (Lenguaje Server Side, Scripting, Sphinx Hacking, etc.)
    * **Mercurial** (control de versiones)
    * **Sphinx** (para crear la documentación), LaTeX
    * **rst2pdf** para crear *esta* presentación

Este proyecto *es* Open Source y se pubicó en:

    http://code.google.com/p/protopy
    
      
FIN
---

¡Muchas Gracias!

.. header::

    Aplicaciones Web Desconectadas

.. footer::

    Defossé, van Haaster :page:
